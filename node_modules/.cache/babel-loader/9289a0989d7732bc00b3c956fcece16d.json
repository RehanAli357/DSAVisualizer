{"ast":null,"code":"import _slicedToArray from\"D:/GitHub/dsavisualizer/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import react,{useState}from\"react\";import\"../Style/Arrays.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Dec='Declaring the Array';var Trav='User Input From the Array';var decr='<';var incr='>';var statement='Enter the Data =';var cls_brkt='}';var Arrays=function Arrays(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),Size=_useState2[0],setSize=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),Arr=_useState4[0],setArr=_useState4[1];var loop=\"for(int i=0;i\".concat(decr).concat(Size,\";i++){\");var ArraySize=function ArraySize(e){e.preventDefault();if(Size==='n'||Size===''){alert('Enter the Number');}else if(Size>10&&Size<0){alert(\"Enter the Number in 1 to 10 Range\");}else{Array([]);}};var Array=function Array(){var arr=[];for(var index=0;index<Size;index++){var val=prompt(\"Enter \".concat(index+1,\" Data\"));arr[index]=val;}setArr(arr);for(var _index=0;_index<Size;_index++){console.log(\"Index=\".concat(_index,\" Value= \").concat(arr[_index]));}};return/*#__PURE__*/_jsx(react.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"Array\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ArrayComp\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Heading\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Arrays\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"Content\",children:/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"q\",{children:\"An array is a collection of items of same data type stored at contiguous memory locations. This makes it easier to calculate the position of each element by simply adding an offset to a base value, i.e., the memory location of the first element of the array (generally denoted by the name of the array). The base value is index 0 and the difference between the two indexes is the offset.\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Syntax\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Code:-\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"userInput\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"inputArea\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Enter The Size Of The Array\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Between 1 to 10\",onChange:function onChange(e){setSize(e.target.value);},required:true,value:Size}),/*#__PURE__*/_jsx(\"button\",{onClick:ArraySize,children:\"Submit\"})]}),/*#__PURE__*/_jsx(\"h1\",{children:\"Code Of An array\"}),/*#__PURE__*/_jsx(\"div\",{className:\"CodeArea\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"code\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"C Program\"}),/*#__PURE__*/_jsx(\"strong\",{children:Dec}),/*#__PURE__*/_jsxs(\"p\",{children:[\"int arr [\",Size,\"];\"]}),/*#__PURE__*/_jsx(\"strong\",{children:Trav}),/*#__PURE__*/_jsxs(\"p\",{children:[loop,/*#__PURE__*/_jsx(\"br\",{}),\"printf(\",decr,decr,\"\\\"\",statement,\"\\\");\",/*#__PURE__*/_jsx(\"br\",{}),\"scanf(\",incr,incr,\"\\\"%d\\\", &arr[i]);\"]})]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"DisplayScreen\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"heading\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Display Screen\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"OP\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Data:-\"}),Arr.map(function(data){return/*#__PURE__*/_jsx(react.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"box Common\",children:[/*#__PURE__*/_jsx(\"p\",{children:data}),/*#__PURE__*/_jsx(\"br\",{})]})});})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"OP\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Index:-\"}),Arr.map(function(data,index){return/*#__PURE__*/_jsx(react.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"box Index Common\",children:[/*#__PURE__*/_jsx(\"p\",{children:index}),/*#__PURE__*/_jsx(\"br\",{})]})});})]})]})]})})});};export default Arrays;","map":{"version":3,"names":["react","useState","Dec","Trav","decr","incr","statement","cls_brkt","Arrays","Size","setSize","Arr","setArr","loop","ArraySize","e","preventDefault","alert","Array","arr","index","val","prompt","console","log","target","value","map","data"],"sources":["D:/GitHub/dsavisualizer/src/Arrays/Arrays.jsx"],"sourcesContent":["import react, { useState } from \"react\";\r\nimport \"../Style/Arrays.css\";\r\n\r\n\r\nconst Dec = 'Declaring the Array';\r\nconst Trav = 'User Input From the Array';\r\nconst decr = '<';\r\nconst incr = '>';\r\nconst statement = 'Enter the Data =';\r\nconst cls_brkt = '}';\r\n\r\nconst Arrays = () => {\r\n    const [Size, setSize] = useState();\r\n    const [Arr, setArr] = useState([]);\r\n    const loop = `for(int i=0;i${decr}${Size};i++){`;\r\n    const ArraySize = (e) => {\r\n        e.preventDefault();\r\n        if (Size === 'n' || Size === '') {\r\n            alert('Enter the Number');\r\n        }\r\n        else if (Size > 10 && Size < 0) {\r\n            alert(\"Enter the Number in 1 to 10 Range\");\r\n        }\r\n        else {\r\n            Array([]);\r\n        }\r\n    }\r\n\r\n    const Array = () => {\r\n        const arr = [];\r\n        for (let index = 0; index < Size; index++) {\r\n            let val = prompt(`Enter ${index + 1} Data`);\r\n            arr[index] = val;\r\n        }\r\n        setArr(arr);\r\n        for (let index = 0; index < Size; index++) {\r\n            console.log(`Index=${index} Value= ${arr[index]}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <react.Fragment>\r\n            <div className=\"Array\">\r\n                <div className=\"ArrayComp\">\r\n                    <div className=\"Heading\">\r\n                        <h1>Arrays</h1>\r\n                    </div>\r\n                    <div className=\"Content\">\r\n                        <p><q>An array is a collection of items of same data type stored at contiguous memory locations.\r\n                            This makes it easier to calculate the position of each element by simply adding an offset to\r\n                            a base value, i.e., the memory location of the first element of the array\r\n                            (generally denoted by the name of the array). The base value is index 0 and\r\n                            the difference between the two indexes is the offset.</q></p>\r\n                    </div>\r\n                    <div className=\"Syntax\">\r\n                        <strong>Code:-</strong>\r\n                        <div className=\"userInput\">\r\n                            <div className=\"inputArea\">\r\n                                <label>Enter The Size Of The Array</label>\r\n                                <input type=\"number\"\r\n                                    placeholder=\"Between 1 to 10\"\r\n                                    onChange={(e) => { setSize(e.target.value) }}\r\n                                    required\r\n                                    value={Size}\r\n                                />\r\n                                <button onClick={ArraySize}>Submit</button>\r\n                            </div>\r\n                            <h1>Code Of An array</h1>\r\n                            <div className=\"CodeArea\">\r\n                                \r\n                                <div className=\"code\">\r\n                                    <strong>C Program</strong>\r\n                                    <strong>{Dec}</strong>\r\n                                    <p>int arr [{Size}];</p>\r\n                                    <strong>{Trav}</strong>\r\n                                    <p>{loop}<br />\r\n                                        printf({decr}{decr}\"{statement}\");<br />\r\n                                        scanf({incr}{incr}\"%d\", &arr[i]);\r\n                                    </p>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"DisplayScreen\">\r\n                        <div className=\"heading\"><h1>Display Screen</h1></div>\r\n                        <div className=\"OP\">\r\n                            <p>Data:-</p>\r\n                            {\r\n                                Arr.map((data) => {\r\n                                    return (\r\n                                        <react.Fragment>\r\n                                            <div className=\"box Common\">\r\n                                                <p>{data}</p><br />\r\n\r\n                                            </div>\r\n                                        </react.Fragment>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className=\"OP\">\r\n                            <p>Index:-</p>\r\n                            {\r\n                                Arr.map((data, index) => {\r\n                                    return (\r\n                                        <react.Fragment>\r\n                                            <div className=\"box Index Common\">\r\n                                                <p>{index}</p><br />\r\n\r\n                                            </div>\r\n                                        </react.Fragment>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </react.Fragment>\r\n    );\r\n}\r\n\r\nexport default Arrays;"],"mappings":"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"},"metadata":{},"sourceType":"module"}