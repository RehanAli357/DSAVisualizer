{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\dsavisualizer\\\\src\\\\Searching\\\\LinearSearching.jsx\",\n    _s = $RefreshSig$();\n\nimport react, { useState } from \"react\";\nimport LinearBinarySearch from \"../DataBase/Searching DataBase/LinearBinarySearch\";\nimport \"../Style/LinearSearch.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LinearSearching = () => {\n  _s();\n\n  const [temp, settemp] = useState(); //for array\n\n  const [temp2, settemp2] = useState(); // for flag\n\n  const [size, setsize] = useState(); //for actual array \n\n  const [flag, setflag] = useState(); //for actual flag\n\n  const [index_pos, setIndex_pos] = useState(-1);\n  const [disp, setdisp] = useState({\n    display: 'none',\n    bgcolor: 'aliceblue',\n    color: 'black'\n  });\n  const [Arr, setArr] = useState([]);\n  let arr = [];\n\n  const Size = e => {\n    e.preventDefault();\n\n    if (temp === '') {\n      alert('enter the value');\n    } else {\n      setsize(temp);\n      settemp('');\n      setArr(arr);\n      Array([]);\n    }\n  };\n\n  const Generate = () => {};\n\n  const Flag = e => {\n    e.preventDefault();\n\n    if (temp2 === '') {\n      alert('enter the value');\n    } else {\n      setflag(temp2);\n      settemp2('');\n      setdisp({\n        display: 'block'\n      });\n    }\n  };\n\n  const Array = () => {\n    for (let index = 0; index < size; index++) {\n      let element = Math.floor(Math.random(100) * 20);\n      arr[index] = element;\n    }\n  };\n\n  const LinearSearch = async function () {\n    let delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 300;\n    setdisp({\n      bgcolor: 'black',\n      color: 'aliceblue'\n    });\n\n    for (let index = 0; index < size; index++) {\n      let ids = document.getElementById(`key${index}`);\n\n      if (parseInt(flag) === Arr[index]) {\n        ids.style.backgroundColor = \"rgb(89, 255, 0)\";\n        setIndex_pos(index);\n        break;\n      } else {\n        ids.style.backgroundColor = \"red\";\n      }\n\n      await new Promise(resolve => setTimeout(() => {\n        resolve();\n      }, 300));\n    }\n  };\n\n  const Reset = () => {\n    setIndex_pos(-1);\n\n    for (let index = 0; index < size; index++) {\n      let ids = document.getElementById(`key${index}`);\n      ids.style.backgroundColor = \"transparent\";\n    }\n  };\n\n  const open = \"{\";\n  const close = \"}\";\n  const inc = \"<\";\n  const dec = \">\";\n  return /*#__PURE__*/_jsxDEV(react.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Array\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ArrayComp\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [LinearBinarySearch.heading1, \" Search\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Content\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"q\", {\n              children: LinearBinarySearch.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Syntax Common\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Enter Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"0 to 10\",\n              onChange: e => {\n                settemp(e.target.value);\n              },\n              value: temp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: Size,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: Generate,\n            children: \"Generate Array\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Enter the Key To Find\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"0 to 10\",\n              onChange: e => {\n                settemp2(e.target.value);\n              },\n              value: temp2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: Flag,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CodeArea\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Code Of An Linear Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"CodeArea\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"code\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"C Program\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"int arr[100],flag,size;\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 56\n                  }, this), \"printf(\\\"Enter the size of array=\\\");\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 68\n                  }, this), \"scanf(\\\"%d\\\",size);\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 50\n                  }, this), \"printf(\\\"Enter the value in array\\\\n\\\");\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 70\n                  }, this), \"for (int i=0;i\", inc, \"size;i++)\", open, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 67\n                  }, this), \"scanf(\\\"%d\\\",arr[i]);\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 52\n                  }, this), close, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 40\n                  }, this), \"printf(\\\"Enter the value to be find=\\\");\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 71\n                  }, this), \"scanf(\\\"%d\\\",flag);\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 50\n                  }, this), \"for (int i=0;i\", inc, \"size;i++)\", open, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 67\n                  }, this), \"if(arr[i]==flag)\", open, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 55\n                  }, this), \"printf(\\\"Data Found\\\");\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 54\n                  }, this), \"break;\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 39\n                  }, this), close, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 40\n                  }, this), close, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 40\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"code\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Discription\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"declare three variable as flag , size and array as arr of size 100\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 106\n                  }, this), \"Take the size from the user\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 67\n                  }, this), \"And Take The value of the array from the user by for loop\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 97\n                  }, this), \"Take the flag value to be find\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 70\n                  }, this), \"Run a for loop and check weather the arr of ith index is equal to flag or not\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 117\n                  }, this), \"If condtion is true then print Data Found and break the loop\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 100\n                  }, this), \"Else do nothing\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 55\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dis\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Size Of Array Is=\", size]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" And Value to Find Is=\", flag]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 60\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DisplayScreen\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Display Screen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hiddenButton\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                display: disp.display,\n                backgroundColor: disp.bgcolor,\n                color: disp.color\n              },\n              onClick: LinearSearch,\n              children: \"Find\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                display: disp.display\n              },\n              onClick: Reset,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"SearchScreeen\",\n            children: Arr.map((data, index) => {\n              return /*#__PURE__*/_jsxDEV(react.Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"box\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    id: `key${index}`,\n                    children: data\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 49\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: disp.display,\n              textAlign: 'center',\n              marginTop: '1em'\n            },\n            children: [\"Data Found At INDEX \", index_pos]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LinearSearch\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Display\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LinearSearching, \"BXTBEH0hnEGUWM3Fe5FsSPDQVi4=\");\n\n_c = LinearSearching;\nexport default LinearSearching;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinearSearching\");","map":{"version":3,"names":["react","useState","LinearBinarySearch","LinearSearching","temp","settemp","temp2","settemp2","size","setsize","flag","setflag","index_pos","setIndex_pos","disp","setdisp","display","bgcolor","color","Arr","setArr","arr","Size","e","preventDefault","alert","Array","Generate","Flag","index","element","Math","floor","random","LinearSearch","delay","ids","document","getElementById","parseInt","style","backgroundColor","Promise","resolve","setTimeout","Reset","open","close","inc","dec","heading1","content","target","value","map","data","textAlign","marginTop"],"sources":["D:/GitHub/dsavisualizer/src/Searching/LinearSearching.jsx"],"sourcesContent":["import react, { useState } from \"react\";\r\nimport LinearBinarySearch from \"../DataBase/Searching DataBase/LinearBinarySearch\";\r\nimport \"../Style/LinearSearch.css\";\r\nconst LinearSearching = () => {\r\n    const [temp, settemp] = useState();//for array\r\n    const [temp2, settemp2] = useState();// for flag\r\n    const [size, setsize] = useState();//for actual array \r\n    const [flag, setflag] = useState();//for actual flag\r\n    const [index_pos, setIndex_pos] = useState(-1);\r\n    const [disp, setdisp] = useState({\r\n        display: 'none',\r\n        bgcolor: 'aliceblue',\r\n        color: 'black'\r\n    });\r\n    const [Arr, setArr] = useState([]);\r\n    let arr = [];\r\n    const Size = (e) => {\r\n        e.preventDefault();\r\n        if (temp === '') {\r\n            alert('enter the value');\r\n        } else {\r\n            setsize(temp);\r\n            settemp('');\r\n            setArr(arr);\r\n            Array([]);\r\n        }\r\n    }\r\n    const Generate = ()=>{\r\n        \r\n    }\r\n \r\n    const Flag = (e) => {\r\n        e.preventDefault();\r\n        if (temp2 === '') {\r\n            alert('enter the value');\r\n        }\r\n        else {\r\n            setflag(temp2);\r\n            settemp2('');\r\n            setdisp({ display: 'block' });\r\n        }\r\n    }\r\n    const Array = () => {\r\n        for (let index = 0; index < size; index++) {\r\n            let element = Math.floor(Math.random(100) * 20);\r\n            arr[index] = element;\r\n        }\r\n    }\r\n    const LinearSearch = async (delay = 300) => {\r\n        setdisp({\r\n            bgcolor: 'black',\r\n            color: 'aliceblue'\r\n        })\r\n        for (let index = 0; index < size; index++) {\r\n            let ids = document.getElementById(`key${index}`);\r\n            if (parseInt(flag) === Arr[index]) {\r\n                ids.style.backgroundColor = \"rgb(89, 255, 0)\";\r\n                setIndex_pos(index);\r\n                break;\r\n            } else {\r\n                ids.style.backgroundColor = \"red\";\r\n            }\r\n            await new Promise((resolve) => setTimeout(() => {\r\n                resolve();\r\n            }, 300))\r\n        }\r\n    }\r\n    const Reset = () => {\r\n        setIndex_pos(-1);\r\n        for (let index = 0; index < size; index++) {\r\n            let ids = document.getElementById(`key${index}`);\r\n            ids.style.backgroundColor = \"transparent\";\r\n        }\r\n\r\n    }\r\n    const open=\"{\";\r\n    const close=\"}\";\r\n    const inc=\"<\";\r\n    const dec=\">\";\r\n    return (\r\n        <react.Fragment>\r\n            <div className=\"Array\">\r\n                <div className=\"ArrayComp\">\r\n                    <div className=\"Heading\">\r\n                        <h1>{LinearBinarySearch.heading1} Search</h1>\r\n                    </div>\r\n                    <div className=\"Content\">\r\n                        <p><q>{LinearBinarySearch.content}</q></p>\r\n                    </div>\r\n                    <div className=\"Syntax Common\">\r\n                        <div className=\"input\">\r\n                            <label>Enter Size</label>\r\n                            <input type=\"number\"\r\n                                placeholder=\"0 to 10\"\r\n                                onChange={(e) => { settemp(e.target.value) }}\r\n                                value={temp}\r\n                            />\r\n                            <button onClick={Size}>Submit</button>\r\n                        </div>\r\n                        <button onClick={Generate}>Generate Array</button>\r\n                        <div className=\"input\">\r\n                            <label>Enter the Key To Find</label>\r\n                            <input type=\"number\"\r\n                                placeholder=\"0 to 10\"\r\n                                onChange={(e) => { settemp2(e.target.value) }}\r\n                                value={temp2}\r\n                            />\r\n                            <button onClick={Flag}>Submit</button>\r\n                        </div>\r\n                        <div className=\"CodeArea\">\r\n                            <h1>Code Of An Linear Search</h1>\r\n                            <div className=\"CodeArea\">\r\n                                <div className=\"code\">\r\n                                <strong>C Program</strong>\r\n                                <p>\r\n                                int arr[100],flag,size;<br/>\r\n                                printf(\"Enter the size of array=\");<br/>\r\n                                scanf(\"%d\",size);<br/>\r\n                                printf(\"Enter the value in array\\n\");<br/>\r\n                                for (int i=0;i{inc}size;i++){open}<br/> \r\n                                scanf(\"%d\",arr[i]);<br/>\r\n                                {close}<br/>\r\n                                printf(\"Enter the value to be find=\");<br/>\r\n                                scanf(\"%d\",flag);<br/>\r\n                                for (int i=0;i{inc}size;i++){open}<br/> \r\n                                if(arr[i]==flag){open}<br/>\r\n                                printf(\"Data Found\");<br/>\r\n                                break;<br/>\r\n                                {close}<br/>\r\n                                {close}<br/>\r\n                                </p>\r\n                                </div>\r\n                                <div className=\"code\">\r\n                                <strong>Discription</strong>\r\n                                    <p>\r\n                                       declare three variable as flag , size and array as arr of size 100<br/>\r\n                                       Take the size from the user<br/>\r\n                                       And Take The value of the array from the user by for loop<br/>\r\n                                       Take the flag value to be find<br/>\r\n                                       Run a for loop and check weather the arr of ith index is equal to flag or not<br/>\r\n                                       If condtion is true then print Data Found and break the loop<br/>\r\n                                       Else do nothing<br/>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"dis\">\r\n                            <p>Size Of Array Is={size}</p> <p> And Value to Find Is={flag}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"DisplayScreen\">\r\n                        <div className=\"heading\"><h1>Display Screen</h1></div>\r\n                        <div className=\"hiddenButton\">\r\n                            <button style={{ display: disp.display, backgroundColor: disp.bgcolor, color: disp.color }}\r\n                                onClick={LinearSearch}>Find</button>\r\n                            <button style={{ display: disp.display }} onClick={Reset}>Reset</button>\r\n                        </div>\r\n                        <div className=\"SearchScreeen\">\r\n                            {\r\n                                Arr.map((data, index) => {\r\n                                    return (\r\n                                        <react.Fragment>\r\n                                            <div className=\"box\" key={index}>\r\n                                                <p id={`key${index}`} key={index}>{data}</p>\r\n                                            </div>\r\n                                        </react.Fragment>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <p style={{ display: disp.display, textAlign: 'center', marginTop: '1em' }}>Data Found At INDEX {index_pos}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"LinearSearch\">\r\n                    <div className=\"Display\">\r\n\r\n                        <div className=\"screen\">\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </react.Fragment>\r\n    );\r\n}\r\n\r\nexport default LinearSearching;"],"mappings":"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"},"metadata":{},"sourceType":"module"}